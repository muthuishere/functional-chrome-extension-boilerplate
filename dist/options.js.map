{"version":3,"file":"options.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACrBA;AACA;AACA;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://chrome-extension-boilerplate/./src/popup/usecases/setBackgroundColor.js","webpack://chrome-extension-boilerplate/./src/services/backgroundservices.js","webpack://chrome-extension-boilerplate/./src/shared/constants.js","webpack://chrome-extension-boilerplate/webpack/bootstrap","webpack://chrome-extension-boilerplate/webpack/runtime/define property getters","webpack://chrome-extension-boilerplate/webpack/runtime/hasOwnProperty shorthand","webpack://chrome-extension-boilerplate/webpack/runtime/make namespace object","webpack://chrome-extension-boilerplate/./src/popup/index.js"],"sourcesContent":["import {executeScriptAtActiveTab} from \"../../services/backgroundservices\";\r\nimport {getChangeColor} from \"../../shared/constants\";\r\n\r\nconsole.log(\"set background color\")\r\nexport async function setBackGroundColorBasedOnStorage() {\r\n\r\n    await executeScriptAtActiveTab(getChangeColor())\r\n\r\n}\r\n\r\n","\r\nexport const getActiveTab = async ()=> chrome.tabs.query({ active: true, currentWindow: true })\r\nexport const getActiveTabID = async () => {\r\n    let [tab] = await getActiveTab()\r\n    return tab.id\r\n}\r\n\r\n\r\n\r\nexport const executeScriptAtTabId = (tabId, filename)=>{\r\n    chrome.scripting.executeScript({\r\n        target: { tabId:tabId },\r\n        files: [filename]\r\n    });\r\n\r\n}\r\nexport const executeScriptAtActiveTab = async (filename)=>{\r\n    const tabId= await getActiveTabID()\r\n    executeScriptAtTabId(tabId,filename)\r\n}\r\n\r\n\r\n","export function getChangeColor(){\r\n    return \"changeColor.js\"\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {setBackGroundColorBasedOnStorage} from \"./usecases/setBackgroundColor\";\r\n\r\n\r\n\r\n\r\n//When Click is called\r\n\r\n\r\n        // setBackgroundPageColor(getCurrentTab,executeScriptOnTab,)\r\ndocument.getElementById(\"changeColor\").addEventListener(\"click\", () => {\r\n\r\n    setBackGroundColorBasedOnStorage()\r\n\r\n\r\n});\r\n\r\n//Everything is from chrome , how to make it functional\r\n//Everything is from Events , how to make it functional\r\n\r\n// The body of this function will be executed as a content script inside the\r\n// current page\r\n"],"names":[],"sourceRoot":""}