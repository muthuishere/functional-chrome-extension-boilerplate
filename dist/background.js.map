{"version":3,"file":"background.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://chrome-extension-boilerplate/./src/background/usecases/globalMessageHandler.js","webpack://chrome-extension-boilerplate/./src/background/usecases/onInstalled.js","webpack://chrome-extension-boilerplate/./src/services/storage.service.js","webpack://chrome-extension-boilerplate/webpack/bootstrap","webpack://chrome-extension-boilerplate/webpack/runtime/define property getters","webpack://chrome-extension-boilerplate/webpack/runtime/hasOwnProperty shorthand","webpack://chrome-extension-boilerplate/webpack/runtime/make namespace object","webpack://chrome-extension-boilerplate/./src/background/index.js"],"sourcesContent":["import {storageApi} from \"../../services/storage.service\";\r\n\r\n\r\nexport async function onMessage(request, sender, sendResponse) {\r\n    console.log('===> FROM THE BACKGROUND:', request);\r\n    if (request.type === 'getColor') {\r\n        const {color} = await storageApi.get('color')\r\n        let response = {color};\r\n        console.log(\"onMessage\", response);\r\n        sendResponse(response);\r\n\r\n    }\r\n}\r\n\r\n","import {storageApi} from \"../../services/storage.service\";\r\n\r\n\r\nexport let color = '#3aa757';\r\nexport function onInstalled(){\r\n    storageApi.set({ color });\r\n    console.log(\"set Color\")\r\n}\r\n","\r\nexport const storageApi = {\r\n\r\n    set:(obj)=>chrome.storage.sync.set(obj),\r\n    get:async (key)=>{\r\n\r\n        return new Promise((resolve,reject)=>{\r\n\r\n            chrome.storage.sync.get(key, (data) => {\r\n                console.log(\"retrieved data\",data)\r\n                resolve(data)\r\n            });\r\n        })\r\n    }\r\n\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {onInstalled} from \"./usecases/onInstalled\";\r\nimport {onMessage} from \"./usecases/globalMessageHandler\";\r\n\r\n\r\nchrome.runtime.onInstalled.addListener(() => {\r\n    onInstalled()\r\n});\r\n\r\nchrome.runtime.onMessage.addListener(\r\n    function (request, sender, sendResponse) {\r\n\r\n        onMessage(request, sender, sendResponse);\r\n        return true\r\n\r\n    }\r\n);\r\n"],"names":[],"sourceRoot":""}